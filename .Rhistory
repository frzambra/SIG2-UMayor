aguas
#a
romeral <- aguas[aguas$NOM_COM == "ROMERAL",]
romeral
ext(romeral)
#b
calag_rom_buf <-st_buffer(rom,1000)
plot(calag_rom_buf$geometry)
#- Fila 1: 9, 6, 4, 1- Fila 2: 10, 25, NA, 2- Fila 3: 5, 10, 15, 25- Fila 4: 100, 5, 30, 502
f1 <- c(9,6,4,1)
f2<- c(10, 25, 1, 2)
f3 <- c(5, 10, 15, 25)
f4<- c(100, 5, 30, 50)
r1 <- rast(ymax=-70.250,ymin=-71.833,xmax=-35.333,xmin= -37.500,ncols=4,nrows=4,nlyr=4)
plot(r1)
library(terra)
r <- rast(x=matrix(1:16*5,4,byrow = FALSE),crs="EPSG:4326")
plot(r);text(r)
#Transforme el sistema de referencia de coordenadas del raster anterior a coordenadas UTM Huso 19 Sur datum WGS84.
r <- project(r,"EPSG:32719")
crs(r,describe=TRUE)
#3. (20pts) Cree un raster nuevo utilizando el raster de la pregunta anterior, en el que se le sumen 10 y se calcule la raiz cuadrada a cada pixel.
r <- rast(x=matrix(1:16*5,4,byrow = FALSE),crs="EPSG:4326")
plot(r);text(r)
sqrtpixel + 10
rr <- r+10
summary(r)
x <- rast("dem_chile.tif")
x
# a. (5pts) clase del objeto
class(x)
#b. (5pts) número de columnas, filas y capas
ncol(x)
nrow(x)
nlyr(x)
#c. (5pts) resolución espacial
res(x)
#d. (5pts) sistema de referencia de coordenadas
crs(x,describe=TRUE)
#e. (5pts) el archivo se encuentra almacenado en la memoria o en el disco.
inMemory(x) #no esta en memoria,esta en DISCO
#f. (15pts) cuál es la elevación máxima y mínima
plot(x)
minmax(x)
copiapo <- rast("imagen_copiapo.tif")
copiapo
plot(copiapo)
#a. (15pts) cree un raster que corresponda a la suma de las cuatro capas.
cap1 <- copiapo[[1]]
cap2 <- copiapo[[2]]
cap3 <- copiapo[[3]]
cap4 <- copoapo[[4]]
cop <- cap1+cap2+cap3+cap4
plot(cop)
cap4 <- copiapo[[4]]
cop <- cap1+cap2+cap3+cap4
cop
plot(cop)
#c. (10pts) haga un mapa en donde se pueda visualizar la composición de color RGB utilizandolas tres primeras capas.
ploot <-copiapo[[1:3]]
plotRGB(ploot)
c(1,75,50,25) *30
c(1,.75,.50,.25) *30
40*120
120*c(1,.75,.5,.25)
library(geodata)
library(agrometR)
estaciones_agromet
library(tidyverse)
estaciones_agromet |>
distinct(region)
estaciones_agromet |>
filter(region == 'Metropolitana')
data <- get_agro_data(station_id = "41",date_start = "2024-08-01",date_end = "2024-08-12")
data <- get_agro_data(stations_id = "41",date_start = "2024-08-01",date_end = "2024-08-12")
data
?worldclim_country
tmin <- geodata::worldclim_country('chile','tmin')
tmin <- geodata::worldclim_country('chile','tmin',path = tempdir())
plot(tmin)
chl <- geodata::gadm('chl')
chl <- geodata::gadm('chl',path = tempdir())
gadm
'gadm
?gadm
plot(chl)
chl
chl <- geodata::gadm('chl',path = tempdir()) |>
st_as_sf()
chl <- geodata::gadm('chl',path = tempdir()) |>
st_as_sf()
library(sf)
chl <- geodata::gadm('chl',path = tempdir()) |>
st_as_sf()
chl
chl |> distinct(NAME_1)
chl[14,] |> plot()
data
data |>
ggplot(aes(fecha_hora,temp_promedio_aire)) +
geom_point()
data |>
ggplot(aes(fecha_hora,temp_promedio_aire)) +
geom_point() +
geom_line()
data
data |> filter(station_id == 41)
estaciones_agromet |> filter(station_id == 41)
estaciones_agromet |> filter(ema == 41)
?ggtitle
data |>
ggplot(aes(fecha_hora,temp_promedio_aire)) +
geom_point() +
geom_line() +
ggtitle('Estación Til-Til',
subtitle = 'Temperatura promedio del aire')
data |>
distinct(station_id) |>
pull(station_id)
estaciones_agromet |>
distinct(ema) |>
pull(ema)
estaciones_agromet
lapply(ids[1:10],\(id){
data <- get_agro_data(stations_id = id,date_start = "2024-08-01",date_end = "2024-08-12")
nombre_estacion <- estaciones_agromet |>
filter(ema == id) |>
pull(nombre_ema)
data |>
ggplot(aes(fecha_hora,temp_promedio_aire)) +
geom_point() +
geom_line() +
ggtitle(paste0('Estación ', nombre_estacion),
subtitle = 'Temperatura promedio del aire')
})
ids <- estaciones_agromet |>
distinct(ema) |>
pull(ema)
lapply(ids[1:10],\(id){
data <- get_agro_data(stations_id = id,date_start = "2024-08-01",date_end = "2024-08-12")
nombre_estacion <- estaciones_agromet |>
filter(ema == id) |>
pull(nombre_ema)
data |>
ggplot(aes(fecha_hora,temp_promedio_aire)) +
geom_point() +
geom_line() +
ggtitle(paste0('Estación ', nombre_estacion),
subtitle = 'Temperatura promedio del aire')
})
data <- get_agro_data(stations_id = '41',date_start = "2024-08-01",date_end = "2024-08-12")
data |>
ggplot(aes(fecha_hora,temp_promedio_aire)) +
geom_point() +
geom_line() +
ggtitle('Estación Til-Til',
subtitle = 'Temperatura promedio del aire')
estaciones_agromet
estaciones_agromet |>
filter(region == 'Metropolitana')
citation("agrometR")
data <- get_agro_data(stations_id = '41',
date_start = "2024-08-01",
date_end = "2024-08-12")
data
data |>
ggplot(aes(fecha_hora,temp_promedio_aire)) +
geom_point() +
geom_line() +
ggtitle('Estación Til-Til',
subtitle = 'Temperatura promedio del aire')
data |> names()
ids <- estaciones_agromet |>
distinct(ema) |>
pull(ema)
lapply(ids[1:10],\(id){
data <- get_agro_data(stations_id = id,date_start = "2024-08-01",date_end = "2024-08-12")
nombre_estacion <- estaciones_agromet |>
filter(ema == id) |>
pull(nombre_ema)
data |>
ggplot(aes(fecha_hora,temp_promedio_aire)) +
geom_point() +
geom_line() +
ggtitle(paste0('Estación ', nombre_estacion),
subtitle = 'Temperatura promedio del aire')
})
data |> names()
lapply(ids[1:10],\(id){
data <- get_agro_data(stations_id = id,date_start = "2024-08-01",date_end = "2024-08-12")
nombre_estacion <- estaciones_agromet |>
filter(ema == id) |>
pull(nombre_ema)
data |>
ggplot(aes(fecha_hora,radiacion_solar_max)) +
geom_point() +
geom_line() +
ggtitle(paste0('Estación ', nombre_estacion),
subtitle = 'Temperatura promedio del aire')
})
# Trabajar con datos vectoriales
estaciones_agromet
# Trabajar con datos vectoriales
estaciones <- estaciones_agromet
View(estaciones)
plot(estaciones$longitud,estaciones$latitud)
est _sf<-estaciones |>
est_sf <- estaciones |>
est_sf
est_sf <- estaciones |>
st_as_sf(coords = c('longitud,'latitud''))
estaciones
est_sf <- estaciones |>
est_sf <- estaciones |>
est_sf <- estaciones |>
st_as_sf(coords = c('longitud','latitud'))
plot(est_sf)
plot(est_sf$geometry)
# Descargar datos climatológicos para Chile, Tmin y Tmax
tmin <- geodata::worldclim_country('chile','tmin',path = tempdir())
tmin
plot(tmin)
tmax <- geodata::worldclim_country('chile','tmax',path = tempdir())
tmax
plot(tmax)
# Descargar unidades administrativas
chl <- geodata::gadm('chl',path = tempdir()) |>
st_as_sf()
plot(chl[])
plot(chl |> st_geometry())
# Seleccionar región Metropolitana
chl[14,] |> st_geometry() |> plot()
metro
metro <- chl[14,]
metro
tmax_metro <- crop(tmax_,metro)
tmax_metro <- crop(tmax,metro)
tmax_metro
plot(tmax_metro)
plot(tmax_metro[[1]])
plot(metro |> st_geometry(),add = TRUE)
tmax_metro <- mask(tmax_metro,metro)
plot(tmax_metro)
library(tmap)
tmap_mode('view')
tm_shape(tmax_metro[[1]]) +
tm_raster()
tm_shape(tmax_metro[[1]]) +
tm_raster() +
tm_shape(metro) +
tm_borders(lwd =2)
estaciones
tm_shape(tmax_metro[[1]]) +
tm_raster() +
tm_shape(metro) +
tm_borders(lwd =2) +
tm_shape(estaciones) +
tm_markers()
estaciones
tm_shape(tmax_metro[[1]]) +
tm_raster() +
tm_shape(metro) +
tm_borders(lwd =2) +
tm_shape(est_sf) +
tm_markers()
tmap_mode('plot')
tm_shape(tmax_metro[[1]]) +
tm_raster() +
tm_shape(metro) +
tm_borders(lwd =2) +
tm_shape(est_sf) +
tm_markers()
tm_shape(tmax_metro[[1]]) +
tm_raster() +
tm_shape(metro) +
tm_borders(lwd =2) +
tm_shape(est_sf) +
tm_dots()
tm_shape(tmax_metro[[1]]) +
tm_raster(style = 'cont') +
tm_shape(metro) +
tm_borders(lwd =2) +
tm_shape(est_sf) +
tm_dots()
tm_shape(tmax_metro[[1]]) +
tm_raster("T°",style = 'cont') +
tm_shape(metro) +
tm_borders(lwd =2) +
tm_shape(est_sf) +
tm_dots()
tm_shape(tmax_metro[[1]]) +
tm_raster(style = 'cont') +
tm_shape(metro) +
tm_borders(lwd =2) +
tm_shape(est_sf) +
tm_dots()
tm_shape(tmax_metro[[1]]) +
tm_raster(style = 'cont') +
tm_shape(metro) +
tm_borders(lwd =2) +
tm_shape(est_sf) +
tm_dots() +
tm_compass() +
tm_graticules()
ets_metro <- st_intersection(est_sf,metro)
metro <- st_transform(metro,est_sf)
metro <- st_transform(metro,st_crs(est_sf))
st_crs(est_sf)
est_sf <- estaciones |>
st_as_sf(coords = c('longitud','latitud'),crs = 4326)
est_sf <- estaciones |>
st_as_sf(coords = c('longitud','latitud'),crs = 4326)
est_sf
metro <- st_transform(metro,st_crs(est_sf))
ets_metro <- st_intersection(est_sf,metro)
tm_shape(tmax_metro[[1]]) +
tm_raster(style = 'cont') +
tm_shape(metro) +
tm_borders(lwd =2) +
tm_shape(est_sf) +
tm_dots() +
tm_compass() +
tm_graticules()
ets_metro
tm_shape(tmax_metro[[1]]) +
tm_raster(style = 'cont') +
tm_shape(metro) +
tm_borders(lwd =2) +
tm_shape(est_sf) +
tm_dots() +
tm_compass() +
tm_graticules()
tmap_mode('view')
tm_shape(tmax_metro[[1]]) +
tm_raster(style = 'cont') +
tm_shape(metro) +
tm_borders(lwd =2) +
tm_shape(est_metro) +
tm_dots() +
tm_compass() +
tm_graticules()
est_metro <- st_intersection(est_sf,metro)
tm_shape(tmax_metro[[1]]) +
tm_raster(style = 'cont') +
tm_shape(metro) +
tm_borders(lwd =2) +
tm_shape(est_metro) +
tm_dots() +
tm_compass() +
tm_graticules()
library(geodata)
citation('geodata')
library(agrometR)
citation('agrometR')
library(tidyverse)
estaciones_agromet
data <- get_agro_data(stations_id = '41',
date_start = "2024-08-01",
date_end = "2024-08-12")
data
data |>
ggplot(aes(fecha_hora,temp_promedio_aire)) +
geom_point() +
geom_line() +
ggtitle('Estación Til-Til',
subtitle = 'Temperatura promedio del aire')
data <- get_agro_data(stations_id = '41',
date_start = "2024-07-01",
date_end = "2024-08-12")
data |>
ggplot(aes(fecha_hora,temp_promedio_aire)) +
geom_point() +
geom_line() +
ggtitle('Estación Til-Til',
subtitle = 'Temperatura promedio del aire')
lapply(ids[1:10],\(id){
data <- get_agro_data(stations_id = id,date_start = "2024-08-01",date_end = "2024-08-12")
nombre_estacion <- estaciones_agromet |>
filter(ema == id) |>
pull(nombre_ema)
data |>
ggplot(aes(fecha_hora,radiacion_solar_max)) +
geom_point() +
geom_line() +
ggtitle(paste0('Estación ', nombre_estacion),
subtitle = 'Temperatura promedio del aire')
})
ids <- estaciones_agromet |>
distinct(ema) |>
pull(ema)
lapply(ids[1:10],\(id){
data <- get_agro_data(stations_id = id,date_start = "2024-08-01",date_end = "2024-08-12")
nombre_estacion <- estaciones_agromet |>
filter(ema == id) |>
pull(nombre_ema)
data |>
ggplot(aes(fecha_hora,radiacion_solar_max)) +
geom_point() +
geom_line() +
ggtitle(paste0('Estación ', nombre_estacion),
subtitle = 'Temperatura promedio del aire')
})
estaciones_agromet
# Trabajar con datos vectoriales
estaciones <- estaciones_agromet
View(estaciones)
plot(estaciones$longitud,estaciones$latitud)
est_sf <- estaciones |>
st_as_sf(coords = c('longitud','latitud'),crs = 4326)
library(sf) # para trabajar con datos vectoriales
library(terra) # para trabajar con datos raster
library(tmap) #para realizar mapas temáticos
library(geodata)
library(agrometR)
library(tidyverse)
est_sf <- estaciones |>
st_as_sf(coords = c('longitud','latitud'),crs = 4326)
plot(est_sf$geometry)
est_sf
# Descargar datos climatológicos para Chile, Tmin y Tmax
tmin <- geodata::worldclim_country('chile','tmin',path = tempdir())
tmin
plot(Tmin)
plot(Ttin)
plot(Ttmin)
plot(tmin)
# Descargar unidades administrativas
chl <- geodata::gadm('chl',path = tempdir()) |>
st_as_sf()
plot(chl |> st_geometry())
chl |> distinct(NAME_1)
# Seleccionar región Metropolitana
chl[2,] |> st_geometry() |> plot()
ara <- chl[2,]
tmax_ara <- crop(tmax,ara)
tmin_ara <- crop(tmin,ara)
tmin_ara <- crop(tmin,ara)
tmin_ara <- mask(tmin_ara,ara)
plot(tmin_ara)
month
months
month
names(tmin_ara) <- month.name
plot(tmin_area)
plot(tmin_ara)
plot(mean(tmin_ara))
est_ara
library(tmap)
tmean <- mean(tmin_ara)
library(tmap)
tm_shape(tmean) +
tm_raster(style = 'cont')
tmap_mode('view')
tm_shape(tmean) +
tm_raster(style = 'cont')
tm_shape(tmean) +
tm_raster(style = 'cont')  +
tm_shape(ara) +
tm_borders(lwd =2)
tm_shape(tmean) +
tm_raster(style = 'cont')  +
tm_shape(ara) +
tm_borders(lwd =2) +
tm_shape(est_ara)
tm_shape(tmean) +
tm_raster(style = 'cont')  +
tm_shape(ara) +
tm_borders(lwd =2)
tmap_mode('plot')
tm_shape(tmean) +
tm_raster(style = 'cont')  +
tm_shape(ara) +
tm_borders(lwd =2)
tm_shape(tmean) +
tm_raster(style = 'cont')  +
tm_shape(ara) +
tm_borders(lwd =2) +
tm_shape(est_sf) +
tm_dots() +
tm_compass() +
tm_graticules()
tm_shape(tmean) +
tm_raster(style = 'cont')  +
tm_shape(ara) +
tm_borders(lwd =2) +
tm_shape(est_sf) +
tm_dots() +
tm_compass() +
tm_graticules() +
tm_layout(legend.outside = TRUE)
map <- tm_shape(tmean) +
tm_raster(style = 'cont')  +
tm_shape(ara) +
tm_borders(lwd =2) +
tm_shape(est_sf) +
tm_dots() +
tm_compass() +
tm_graticules() +
tm_layout(legend.outside = TRUE)
tmap_save(map,'mapaejeomlo.png')
?matrix
warpbreaks
warpbreaks |> class()
m1 <- matrix(sample(1:100,12),4,3)
m2 <- matrix(sample(1:100,20),4,5)
cbind(m1,m2)
v <- runif(40,0,100)
rbind(c(11,12,13,14,15),
c(21,22,23,24,25),
c(31,32,33,34,35),
c(41,42,43,44,45),
c(51,52,53,54,55))
