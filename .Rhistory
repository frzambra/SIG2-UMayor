f2<- c(10, 25, NA, 2)
f3 <- c(5, 10, 15, 25)
f4<- c(100, 5, 30, 50)
r1 <-rast(ymax=-70.250,ymin=-71.833,xmax=-35.333,xmin= -37.500,ncols=4,nrows=4,nlyr=4)
d <- c(9,9,9,9,10,10,10,10,5,5,5,5,100,100,100,100,6,6,6,6,25,25,25,25,10,10,10,10,5,5,5,5,4,4,4,4,NA,NA,NA,NA,15,15,15,15,30,30,30,30,1,1,1,1,2,2,2,2,25,25,25,25,50,50,50,50)
values(r1) <- d
values(r1)
plot(r1)
r <- rast(x=matrix(1:16*5,4,byrow = FALSE),crs="EPSG:4326")
plot(r);text(r)
#Transforme el sistema de referencia de coordenadas del raster anterior a coordenadas UTM Huso 19 Sur datum WGS84.
r <- project(r,"EPSG:32719")
#3. (20pts) Cree un raster nuevo utilizando el raster de la pregunta anterior, en el que se le sumen 10 y se calcule la raiz cuadrada a cada pixel.
ee <- r+10
ee
values(r)
values(ee)
qq <- sqrt(ee)
values(qq)
plot(qq)
#4. (20pts) Cree un nuevo raster, tomando como referencia el raster de la pregunta 2, al que se le cambie los valores que son menores que 46 y mayores que 54, por el valor NA .
r2 <- r<46;r>54
plot(r2);text(r2)
summary(r)
q <- rast("dem_chile.tif")
q
# a. (5pts) clase del objeto
class(q)
#b. (5pts) número de columnas, filas y capas
ncol(q)
nrow(q)
nlyr(q)
#c. (5pts) resolución espacial
res(q)
#d. (5pts) sistema de referencia de coordenadas
crs(q,describe=TRUE)
#e. (5pts) el archivo se encuentra almacenado en la memoria o en el disco.
q
DISCO
#e. (15pts) cuál es la elevación máxima y mínima
plot(q)
minmax(q)
#7. Cargue el archivo imagen_copiapo.tif en R. Realice lo siguiente:
cop <- rast("imagen_copiapo.tif")
cop
plot(cop)
#a. (15pts) cree un raster que corresponda a la suma de las cuatro capas.
c1 <- cop[[1]]
c2 <- cop [[2]]
c3 <- cop[[3]]
c4 <- cop [[4]]
copp <- c1+c2+c3+c4
copp
plot(copp)
w <- project(cop, "EPSG:4326")
w
#c. (10pts) haga un mapa en donde se pueda visualizar la composición de color RGB utilizandolas tres primeras capas.
we <- c(c1,c2,c3)
plotRGB(we)
# Coordenadas del pentágono
coordenadas <- cbind(c(0, 4, 6, 4, 0, -2), c(0, 0, 2 * sqrt(3), 4 * sqrt(3), 4 * sqrt(3), 2 * sqrt(3)))
# Crear una nueva ventana de gráficos
plot(1, type = 'n', xlab = "", ylab = "", xlim = c(-3, 7), ylim = c(-1, 5), asp = 1)
# Dibujar el pentágono
polygon(coordenadas, col = "lightblue", border = "blue")
# Etiquetar los puntos A, B, C, D, E, F
text(coordenadas[,1], coordenadas[,2], labels = c("A", "B", "C", "D", "E", "F"), pos = 3, col = "red")
# Establece la ruta del archivo .shp
ruta_shapefile <- '/Lagos/Inventaro_Lagos.shp'
# Lee el archivo .shp
datos_spatial <- st_read('Lagos/Inventario_Lagos.shp')
# Verifica la estructura y los primeros registros del archivo
head(datos_spatial)
# Cargar los paquetes
library(sf)
print(datos_spatial$PROVINCIA=='Santiago')
lagos_stgo <- datos_spatial$PROVINCIA %in%'Santiago'
lagos_stgo_1 <- which(lagos_stgo)[1]
print(lagos_stgo)
# 467 474 487 499 500 505 506 507 508. Son 9
intento1 <- datos_spatial == 'Santiago'
#(10pts) reproyecte (transforme) el sistema de referencias de coordendas de lagos_stgo a SRC EPSG 4326 y reemplázelo.
crs(datos_spatial)
# Definir el nuevo sistema de referencia de coordenadas (EPSG en este caso)
nuevo_csr <-st_transform(
datos_spatial,csr="EPSG:4326")
#(15pts) haga un mapa (con plot) en donde se muestre con colores la variación de la variable área (AREA_KM2)
AREA_km2_stgo <-  datos_spatial$AREA_KM2
area_stgo_km2 <-c(AREA_km2_stgo[467],AREA_km2_stgo[474], AREA_km2_stgo[487],AREA_km2_stgo[499],  AREA_km2_stgo[500],AREA_km2_stgo[505],AREA_km2_stgo[506],AREA_km2_stgo[507],AREA_km2_stgo[508])
area_stgo_km2
plot(area_stgo_km2,col="red")
#(20pts) seleccione el primer lago de lagos_stgo y simplifique su geometria, considerando una tolerancia de 30m. Haga un plot de la geometría original y simplificada.
lago_1 <- lagos_stgo
lago_sim<-st_simplify(lago_1,dTolerance = 30)
plot(lago_1)
plot(lago_sim)
lago_1
# Hacer un plot de la geometría original y simplificada
par(mfrow = c(1, 2))
plot(lago_1, main = "Geometría Original", col = "blue",max.plot = 21)
plot(lago_sim, main = "Geometría Simplificada", col = "red")
#4.Cargue la capa de Indice Calidad Aguas y realice lo siguiente:
calidad_agua<-st_read("Indice_Calidad_de_Aguas")
#(15pts) Seleccione las observaciones que se encuentran en la comuna de “Romeral”. ¿Cuántas puntos hay?
romeral<-calidad_agua[calidad_agua$NOM_COM=="ROMERAL",] #hay 3
romeral
# (10pts) cree un buffer de 1000 metros en los puntos que se encuentran en Romeral y asignelo al objeto calag_rom_buf.
calag_rom_buf<-st_buffer(romeral,1000)
plot(calag_rom_buf$geometry)
#(10pts) ¿cuáles son los nombres de las cinco primeras variables de calag_rom_buf.
calidad_5<-calag_rom_buf[,1:5]
calidad_5
raster_1 <- rast(nrow=5,ncol=4,nlyr=4,ymax=-35.3333333,xmin= -71.83333305555556, xmax= -70.2666663888889,ymin= -37.5166667,crs="ESPG:4326")
fila_1 <- c(9, 6, 4, 1)
fila_2 <- c(10, 25, NA, 2)
fila_3 <- c(5, 10, 15, 25)
fila_4 <-  c(100, 5, 30, 50)
values(raster_1) <-c(fila_1,fila_2,fila_3,fila_4)
plot(raster_1)
raster_1 <- rast(nrow=5,ncol=4,nlyr=4,ymax=-35.3333333,xmin= -71.83333305555556, xmax= -70.2666663888889,ymin= -37.5166667,crs="ESPG:4326")
raster_1
raster_1 <- rast(nrow=5,ncol=4,nlyr=4,ymax=-35.3333333,xmin= -71.83333305555556, xmax= -70.2666663888889,ymin= -37.5166667,crs="ESPG:4326")
?rast
raster_1 <- rast(nrow=5,ncol=4,
nlyr=4,ymax=-35.3333333,xmin= -71.83333305555556,
xmax= -70.2666663888889,ymin= -37.5166667,
crs="ESPG:4326")
rast(nrow=5,ncol=4,
nlyr=4,ymax=-35.3333333,xmin= -71.83333305555556,
xmax= -70.2666663888889,ymin= -37.5166667
)
#2. (15pts) Considere el siguiente raster y Transforme el sistema de referencia de coordenadas del raster anterior a coordenadas UTM Huso 19 Sur datum WGS84.
library(terra)
r <- rast(x=matrix(1:16*5,4,byrow = FALSE),crs="EPSG:4326")
plot(r);text(r)
crs(r)
nuevo_crs <- project(r,"WGS84")
crs(nuevo_csr)
r4 <- na_if(r>54,r<46)
values(r4)
summary(r)
fun_3 <- global(r, c("sum", "mean", "sd"), na.rm=TRUE)
fun_3
q <- rast("dem_chile.tif")
q
# a. (5pts) clase del objeto
class(q)
#b. (5pts) número de columnas, filas y capas
ncol(q)
nrow(q)
nlyr(q)
#c. (5pts) resolución espacial
res(q)
#d. (5pts) sistema de referencia de coordenadas
crs(q,describe=TRUE)
#e. (15pts) cuál es la elevación máxima y mínima
plot(q)
minmax(q)
cop <- rast("imagen_copiapo.tif")
cop
plot(cop)
#a. (15pts) cree un raster que corresponda a la suma de las cuatro capas.
c1 <- cop[[1]]
c2 <- cop [[2]]
c3 <- cop[[3]]
c4 <- cop [[4]]
copp <- c1+c2+c3+c4
copp
plot(copp)
#c. (10pts) haga un mapa en donde se pueda visualizar la composición de color RGB utilizandolas tres primeras capas.
we <- c(c1,c2,c3)
plotRGB(we)
coords <- matrix(c(0, 4, 6, 4, 0, -2, 0,
0, 0, 2 * sqrt(3), 4 * sqrt(3), 4 * sqrt(3), 2 * sqrt(3), 0),
ncol = 2, byrow = TRUE)
df_pol <- data.frame(x=c(0,4,6,4,0,-2),y=c(0,0,2*sqrt(3),4*sqrt(3),4*sqrt(3),2*sqrt(3)))
df_pol
dfp <- as.matrix(df_pol)
pol <- st_polygon(list(rbind(dfp,dfp[1,])))
plot(pol)
library(sf)
i_lagos <- st_read('Lagos/I_Lagos/Inventario_Lagos.shp')
i_lagos <- st_read('Lagos/Inventario_Lagos.shp')
i_lagos <- st_read('Lagos/Inventario_Lagos.shp')
#a(5pts) tipo de geometria
i_lagos$geometry
#b(5pts) dimensión de los puntos
dim(i_lagos) 2067 puntos y 22 columns
#c(10pts) sistema de referencia de coordenadas (datum, proyectada o no proyectada, huso si corresponde y código EPSG)
st_crs(i_lagos,describe=TRUE)
st_crs(i_lagos,describe=TRUE)$epsg
st_crs(i_lagos,describe=TRUE)$datum
ncol(i_lagos) #variables
nrow(i_lagos) #observaciones
i_lagos <- st_read('Lagos/I_Lagos/Inventario_Lagos.shp')
i_lagos <- st_read('Lagos/Inventario_Lagos.shp')
names(i_lagos)
unique((i_lagos$PROVINCIA))
lagos_stgo <- i_lagos[i_lagos$PROVINCIA == "Santiago" ,]
lagos_stgo
nrow(lagos_stgo) #SON 34 LAGOS
st_crs <- 4326 #ASISGNADO
lagos_stgo <- i_lagos[i_lagos$PROVINCIA == "Santiago" ,]
lagos_stgo
plot(lagos_stgo_4326["AREA_KM2"], main = "Variación del Área de Lagos en Santiago", col = "red")
lagos_stgo_4326<- st_transform(lagos_stgo,4326) #PROYECTANDO
lagos_stgo_4326
st_crs(lagos_stgo_4326)
plot(lagos_stgo_4326)
plot(lagos_stgo_4326["AREA_KM2"], main = "Variación del Área de Lagos en Santiago", col = "red")
#slecciona el primer lago :
primer_lago <- lagos_stgo[1, ]
plot(primer_lago)
str(primer_lago)
#PARA SIMFLIFICARLO SE USA LA FUNCION St_SIMPLIFY
lago_simplificado <- st_simplify(primer_lago, dTolerance = 30)
par(mfrow = c(1, 2))  # Configura el diseño para mostrar dos gráficos en una fila
plot(primer_lago, main = "Geometría Original", col = "blue", border = "black")
plot(lago_simplificado, main = "Geometría Simplificada", col = "red", border = "black")
library(sf)
Indice_Agua <- st_read('Indice_Calidad_de_Aguas/ICA_Indice_Calidad_Aguas.shp')
unique(Indice_Agua$NOM_COM)
c_romeral <- Indice_Agua[Indice_Agua$NOM_COM == "ROMERAL" ,]
c_romeral
ncol(c_romeral)
nrow(c_romeral) #SON 27x3-> 81
plot(c_romeral)
puntos <- st_geometry(shp[st_geometry_type(c_romeral ) == "POINT", ])
ncol(c_romeral)
nrow(c_romeral) #SON 27x3-> 81
puntos <- st_geometry(shp[st_geometry_type(c_romeral ) == "POINT", ])
calag_rom_buf <- st_buffer(c_romeral,1000)
calag_rom_buf
plot(calag_rom_buf$geometry)
#c. (10pts) ¿cuáles son los nombres de las cinco primeras variables de calag_rom_buf .
names(calag_rom_buf)[1:5]
#RESPUESTA
latitud_sur <- 35 + 20/60
latitud_norte <- 37 + 30/60
longitud_oeste <- -71 - 50/60
longitud_este <- -70 - 15/60
num_filas <- 4
num_columnas <- 4
r <- raster(matrix(NA, nrow = num_filas, ncol = num_columnas),
xmn = longitud_oeste, xmx = longitud_este,
ymn = latitud_sur, ymx = latitud_norte,
crs = "+proj=longlat +datum=WGS84")
valores_filas <- list(c(9, 6, 4, 1), c(10, 25, NA, 2), c(5, 10, 15, 25), c(100, 5, 30, 50))
r <- rast(x=matrix(1:16*5,4,byrow = FALSE),crs="EPSG:4326")
plot(r);text(r)
r2_sqrt <- sqrt(r+10)
plot(r2_sqrt)
text(r2_sqrt)
#raster pregunta 2
r <- rast(x=matrix(1:16*5,4,byrow = FALSE),crs="EPSG:4326")
plot(r)
text(r)
rmod <- raster(r)
a <- rmod < 46 | rmod > 54
a
a <- NA
plot(a)
text(a)
#raster pregunta 2
r <- rast(x=matrix(1:16*5,4,byrow = FALSE),crs="EPSG:4326")
plot(r)
text(r)
rmod <- raster(r)
#5. (20pts) Calcule el promedio, la mediana y desviación estandar de todos los valores del raster dela pregunta 2. Utilice una función de {terra} .
#raster pregunta 2
r <- rast(x=matrix(1:16*5,4,byrow = FALSE),crs="EPSG:4326")
plot(r)
text(r)
summary(r)
mean(r)
median(r)
sd(r)
dem_chile <- rast('dem_chile.tif')
dem_chile
plot(dem_chile)
#a. (5pts) clase del objeto
class(dem_chile)
#b. (5pts) número de columnas, filas y capas
ncol(dem_chile)
nrow(dem_chile)
nlyr(dem_chile)
#c. (5pts) resolución espacial
res(dem_chile)
#d. (5pts) sistema de referencia de coordenadas
crs(dem_chile)
crs(dem_chile,describe=TRUE)
inMemory(dem_chile)
max(dem_chile)
min(dem_chile)
library(terra)
copiapo <- rast('imagen_copiapo.tif')
plot(copiapo)
#a. (15pts) cree un raster que corresponda a la suma de las cuatro capas.
names(copiapo) # nombre de las capas
library(terra)
r_suma <- copiapo[[1]] + copiapo[[2]] + copiapo[[3]] + copiapo[[4]]
r_suma
plot(r_suma)
crs(copiapo)
copiapo_4326 <- project(copiapo,4326)
crs_nuevo <- "+proj=longlat +datum=WGS84"
library(sf)
puntos<-data.frame(
x=c(0,4,6,4,0,-2),
y=c(0,0,2*sqrt(3),4*sqrt(3),4*sqrt(3),2*sqrt(3)))
puntos
puntos_matriz<-as.matrix(puntos)
puntos_matriz
pentagono<-st_polygon(list(
rbind(puntos_matriz,puntos_matriz[1,])))
pentagono
plot(pentagono)
dev.off()
lagos<-st_read("Lagos")
#a. (5pts) tipo de geometria
st_geometry_type(lagos)
#b. (5pts) dimensión de los puntos
#Las dimensiones son XY
dim(lagos)
#c. (10pts) sistema de referencia de coordenadas (datum, proyectada o no proyectada, huso si corresponde y código EPSG)
st_crs(lagos)
#d. (5pts) cantidad de variables y observaciones
str(lagos)
#e. (5pts) extensión
st_bbox(lagos)
#3.Con la capa de Inventario Lagos realice lo siguiente:
#a. (15pts) seleccione los lagos que pertenecen a la provincia de Santiago y asignelo a un objeto lagos_stgo . ¿Cuántos son?
#R:/son 9 lagos
lagos_stgo<-lagos[lagos$PROVINCIA%in%c("Santiago"),]
str(lagos_stgo)
#b. (10pts) reproyecte (transforme) el sistema de referencias de coordendas de lagos_stgo a SRC EPSG 4326 y reemplázelo.
lagos_stgo<-st_transform(lagos_stgo,4326)
st_crs(lagos_stgo)
#c. (15pts) haga un mapa (con plot) en donde se muestre con colores la variación de la variable área (AREA_KM2)
plot(lagos_stgo$AREA_KM2,col="red")
lagos_stgo<-st_transform(lagos_stgo,32719)
st_crs(lagos_stgo)
lago_simplificado<-st_simplify(lagos_stgo[,1],dTolerance =30)
par(mfrow = c(1,2))
plot(lago_simplificado$geometry)
plot(lagos_stgo[,1]$geometry)
#4. Cargue la capa de Indice Calidad Aguas y realice lo siguiente:
Indice_calidad_de_Aguas<-st_read("Indice_Calidad_de_Aguas")
Indice_Romeral<-Indice_calidad_de_Aguas[Indice_calidad_de_Aguas$NOM_COM %in% c("ROMERAL"),]
Indice_Romeral
str(Indice_Romeral)
calag_rom_buf<-st_buffer(Indice_Romeral,1000)
plot(calag_rom_buf$geometry)
#c. (10pts) ¿cuáles son los nombres de las cinco primeras variables de calag_rom_buf
#R:/OBJECTID_1 OBJECTID            NOMBRE_APR                       NOMBRE_BNA    COD_BNA
names(calag_rom_buf)[1:5]
library(terra)
r<-rast(xmin=-71.833,xmax=-70.25,
ymin=-37.5,ymax=-35.333,
nrows=4,ncol=4,
crs="EPSG:4326")
values(r)<-c(9,6,4,1,10,25,NA,2,5,10,15,25,100,5,30,50)
plot(r)
text(r)
#2. (15pts) Considere el siguiente raster
r2 <- rast(x=matrix(1:16*5,4,byrow = FALSE),crs="EPSG:4326")
plot(r2);text(r2)
r2_raiz<-sqrt(r2+10)
plot(r2_raiz)
text(r2_raiz,digits=2)
l<-r2<46|r2>54
r2[l]<-NA
plot(r2)
text(r2)
#5. (20pts) Calcule el promedio, la mediana y desviación estandar de todos los valores del raster de la pregunta 2. Utilice una función de {terra} .
r2 <- rast(x=matrix(1:16*5,4,byrow = FALSE),crs="EPSG:4326")
plot(r2);text(r2)
global(r2,mean)
global(r2,median)
global(r2,sd)
dem_chile<-rast("dem_chile.tif")
#a. (5pts) clase del objeto
class(dem_chile)
#b. (5pts) número de columnas, filas y capas
dim(dem_chile)
#c. (5pts) resolución espacial
res(dem_chile)
#d. (5pts) sistema de referencia de coordenadas
cat(crs(dem_chile))
#e. (5pts) el archivo se encuentra almacenado en la memoria o en el disco.
inMemory(dem_chile)
#f. (15pts) cuál es la elevación máxima y mínima
elevacion <- range(values(dem_chile), na.rm = TRUE)
elevacion
max(elevacion)
min(elevacion)
#a. (15pts) cree un raster que corresponda a la suma de las cuatro capas.
imagen_copiapo<-rast("imagen_copiapo.tif")
Capa1<-imagen_copiapo[[1]]
Capa2<-imagen_copiapo[[2]]
Capa3<-imagen_copiapo[[3]]
Capa4<-imagen_copiapo[[4]]
sumas_capas<-sum(Capa1,Capa2,Capa3,Capa4,na.rm =TRUE)
#c. (10pts) haga un mapa en donde se pueda visualizar la composición de color RGB utilizando las tres primeras capas.
plotRGB(imagen_copiapo[[1:3]])
capa1_copiapo<-imagen_copiapo[[1]]
dim(capa1_copiapo)
#1. (20pts) Cree un pentágono con las coordenadas que se indican en los puntos A, B, C, D, E y F
#A(0,0),B(4,0),C(6,2RAIZ 3),D(4,4RAIZ 3),E(0,4RAIZ 3),F(-2,2RAIZ 3)
df <- data.frame(
latitud = c(0,4,6,4,0,-2),
longitud = c(0,0,3.464,6.928,6.928,3.464)
)
pol <- as.matrix(df)
po <- st_polygon(
list(
rbind(pol,pol[1,]))
)
po
plot(po)
dev.off()
library(sf)
inventario_lagos <- read_sf("Lagos/Inventario_Lagos.shp")
#a
inventario_lagos$geometry
st_geometry(inventario_lagos)
#b
inventario_lagos
#a
inventario_lagos$PROVINCIA
lagos_stgo <- inventario_lagos[inventario_lagos$PROVINCIA == "Santiago", ]
length(lagos_stgo)
lagos_stgo
lagos_stgo <- st_transform(lagos_stgo,4326)
st_crs(lagos_stgo)
#c
plot(lagos_stgo)
#d
prlago <- lagos_stgo[1, ]
plot(prlago)
simpprlago <- st_simplify(prlago, dTolerance = 30)
#dos paneles
par(mfrow = c(1, 2))
plot(prlago, main = "Geometría Original")
plot(simpprlago, main = "Geometría Simplificada")
library(sf)
aguas <- read_sf("Indice_Calidad_de_Aguas/ICA_Indice_Calidad_Aguas.shp")
aguas
#a
romeral <- aguas[aguas$NOM_COM == "ROMERAL",]
romeral
ext(romeral)
#b
calag_rom_buf <-st_buffer(rom,1000)
plot(calag_rom_buf$geometry)
#- Fila 1: 9, 6, 4, 1- Fila 2: 10, 25, NA, 2- Fila 3: 5, 10, 15, 25- Fila 4: 100, 5, 30, 502
f1 <- c(9,6,4,1)
f2<- c(10, 25, 1, 2)
f3 <- c(5, 10, 15, 25)
f4<- c(100, 5, 30, 50)
r1 <- rast(ymax=-70.250,ymin=-71.833,xmax=-35.333,xmin= -37.500,ncols=4,nrows=4,nlyr=4)
plot(r1)
library(terra)
r <- rast(x=matrix(1:16*5,4,byrow = FALSE),crs="EPSG:4326")
plot(r);text(r)
#Transforme el sistema de referencia de coordenadas del raster anterior a coordenadas UTM Huso 19 Sur datum WGS84.
r <- project(r,"EPSG:32719")
crs(r,describe=TRUE)
#3. (20pts) Cree un raster nuevo utilizando el raster de la pregunta anterior, en el que se le sumen 10 y se calcule la raiz cuadrada a cada pixel.
r <- rast(x=matrix(1:16*5,4,byrow = FALSE),crs="EPSG:4326")
plot(r);text(r)
sqrtpixel + 10
rr <- r+10
summary(r)
x <- rast("dem_chile.tif")
x
# a. (5pts) clase del objeto
class(x)
#b. (5pts) número de columnas, filas y capas
ncol(x)
nrow(x)
nlyr(x)
#c. (5pts) resolución espacial
res(x)
#d. (5pts) sistema de referencia de coordenadas
crs(x,describe=TRUE)
#e. (5pts) el archivo se encuentra almacenado en la memoria o en el disco.
inMemory(x) #no esta en memoria,esta en DISCO
#f. (15pts) cuál es la elevación máxima y mínima
plot(x)
minmax(x)
copiapo <- rast("imagen_copiapo.tif")
copiapo
plot(copiapo)
#a. (15pts) cree un raster que corresponda a la suma de las cuatro capas.
cap1 <- copiapo[[1]]
cap2 <- copiapo[[2]]
cap3 <- copiapo[[3]]
cap4 <- copoapo[[4]]
cop <- cap1+cap2+cap3+cap4
plot(cop)
cap4 <- copiapo[[4]]
cop <- cap1+cap2+cap3+cap4
cop
plot(cop)
#c. (10pts) haga un mapa en donde se pueda visualizar la composición de color RGB utilizandolas tres primeras capas.
ploot <-copiapo[[1:3]]
plotRGB(ploot)
c(1,75,50,25) *30
c(1,.75,.50,.25) *30
40*120
120*c(1,.75,.5,.25)
