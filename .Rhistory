tm_shape(metro) +
tm_borders(lwd =2) +
tm_shape(est_sf) +
tm_dots()
tm_shape(tmax_metro[[1]]) +
tm_raster(style = 'cont') +
tm_shape(metro) +
tm_borders(lwd =2) +
tm_shape(est_sf) +
tm_dots() +
tm_compass() +
tm_graticules()
ets_metro <- st_intersection(est_sf,metro)
metro <- st_transform(metro,est_sf)
metro <- st_transform(metro,st_crs(est_sf))
st_crs(est_sf)
est_sf <- estaciones |>
st_as_sf(coords = c('longitud','latitud'),crs = 4326)
est_sf <- estaciones |>
st_as_sf(coords = c('longitud','latitud'),crs = 4326)
est_sf
metro <- st_transform(metro,st_crs(est_sf))
ets_metro <- st_intersection(est_sf,metro)
tm_shape(tmax_metro[[1]]) +
tm_raster(style = 'cont') +
tm_shape(metro) +
tm_borders(lwd =2) +
tm_shape(est_sf) +
tm_dots() +
tm_compass() +
tm_graticules()
ets_metro
tm_shape(tmax_metro[[1]]) +
tm_raster(style = 'cont') +
tm_shape(metro) +
tm_borders(lwd =2) +
tm_shape(est_sf) +
tm_dots() +
tm_compass() +
tm_graticules()
tmap_mode('view')
tm_shape(tmax_metro[[1]]) +
tm_raster(style = 'cont') +
tm_shape(metro) +
tm_borders(lwd =2) +
tm_shape(est_metro) +
tm_dots() +
tm_compass() +
tm_graticules()
est_metro <- st_intersection(est_sf,metro)
tm_shape(tmax_metro[[1]]) +
tm_raster(style = 'cont') +
tm_shape(metro) +
tm_borders(lwd =2) +
tm_shape(est_metro) +
tm_dots() +
tm_compass() +
tm_graticules()
library(geodata)
citation('geodata')
library(agrometR)
citation('agrometR')
library(tidyverse)
estaciones_agromet
data <- get_agro_data(stations_id = '41',
date_start = "2024-08-01",
date_end = "2024-08-12")
data
data |>
ggplot(aes(fecha_hora,temp_promedio_aire)) +
geom_point() +
geom_line() +
ggtitle('Estación Til-Til',
subtitle = 'Temperatura promedio del aire')
data <- get_agro_data(stations_id = '41',
date_start = "2024-07-01",
date_end = "2024-08-12")
data |>
ggplot(aes(fecha_hora,temp_promedio_aire)) +
geom_point() +
geom_line() +
ggtitle('Estación Til-Til',
subtitle = 'Temperatura promedio del aire')
lapply(ids[1:10],\(id){
data <- get_agro_data(stations_id = id,date_start = "2024-08-01",date_end = "2024-08-12")
nombre_estacion <- estaciones_agromet |>
filter(ema == id) |>
pull(nombre_ema)
data |>
ggplot(aes(fecha_hora,radiacion_solar_max)) +
geom_point() +
geom_line() +
ggtitle(paste0('Estación ', nombre_estacion),
subtitle = 'Temperatura promedio del aire')
})
ids <- estaciones_agromet |>
distinct(ema) |>
pull(ema)
lapply(ids[1:10],\(id){
data <- get_agro_data(stations_id = id,date_start = "2024-08-01",date_end = "2024-08-12")
nombre_estacion <- estaciones_agromet |>
filter(ema == id) |>
pull(nombre_ema)
data |>
ggplot(aes(fecha_hora,radiacion_solar_max)) +
geom_point() +
geom_line() +
ggtitle(paste0('Estación ', nombre_estacion),
subtitle = 'Temperatura promedio del aire')
})
estaciones_agromet
# Trabajar con datos vectoriales
estaciones <- estaciones_agromet
View(estaciones)
plot(estaciones$longitud,estaciones$latitud)
est_sf <- estaciones |>
st_as_sf(coords = c('longitud','latitud'),crs = 4326)
library(sf) # para trabajar con datos vectoriales
library(terra) # para trabajar con datos raster
library(tmap) #para realizar mapas temáticos
library(geodata)
library(agrometR)
library(tidyverse)
est_sf <- estaciones |>
st_as_sf(coords = c('longitud','latitud'),crs = 4326)
plot(est_sf$geometry)
est_sf
# Descargar datos climatológicos para Chile, Tmin y Tmax
tmin <- geodata::worldclim_country('chile','tmin',path = tempdir())
tmin
plot(Tmin)
plot(Ttin)
plot(Ttmin)
plot(tmin)
# Descargar unidades administrativas
chl <- geodata::gadm('chl',path = tempdir()) |>
st_as_sf()
plot(chl |> st_geometry())
chl |> distinct(NAME_1)
# Seleccionar región Metropolitana
chl[2,] |> st_geometry() |> plot()
ara <- chl[2,]
tmax_ara <- crop(tmax,ara)
tmin_ara <- crop(tmin,ara)
tmin_ara <- crop(tmin,ara)
tmin_ara <- mask(tmin_ara,ara)
plot(tmin_ara)
month
months
month
names(tmin_ara) <- month.name
plot(tmin_area)
plot(tmin_ara)
plot(mean(tmin_ara))
est_ara
library(tmap)
tmean <- mean(tmin_ara)
library(tmap)
tm_shape(tmean) +
tm_raster(style = 'cont')
tmap_mode('view')
tm_shape(tmean) +
tm_raster(style = 'cont')
tm_shape(tmean) +
tm_raster(style = 'cont')  +
tm_shape(ara) +
tm_borders(lwd =2)
tm_shape(tmean) +
tm_raster(style = 'cont')  +
tm_shape(ara) +
tm_borders(lwd =2) +
tm_shape(est_ara)
tm_shape(tmean) +
tm_raster(style = 'cont')  +
tm_shape(ara) +
tm_borders(lwd =2)
tmap_mode('plot')
tm_shape(tmean) +
tm_raster(style = 'cont')  +
tm_shape(ara) +
tm_borders(lwd =2)
tm_shape(tmean) +
tm_raster(style = 'cont')  +
tm_shape(ara) +
tm_borders(lwd =2) +
tm_shape(est_sf) +
tm_dots() +
tm_compass() +
tm_graticules()
tm_shape(tmean) +
tm_raster(style = 'cont')  +
tm_shape(ara) +
tm_borders(lwd =2) +
tm_shape(est_sf) +
tm_dots() +
tm_compass() +
tm_graticules() +
tm_layout(legend.outside = TRUE)
map <- tm_shape(tmean) +
tm_raster(style = 'cont')  +
tm_shape(ara) +
tm_borders(lwd =2) +
tm_shape(est_sf) +
tm_dots() +
tm_compass() +
tm_graticules() +
tm_layout(legend.outside = TRUE)
tmap_save(map,'mapaejeomlo.png')
?matrix
warpbreaks
warpbreaks |> class()
m1 <- matrix(sample(1:100,12),4,3)
m2 <- matrix(sample(1:100,20),4,5)
cbind(m1,m2)
v <- runif(40,0,100)
rbind(c(11,12,13,14,15),
c(21,22,23,24,25),
c(31,32,33,34,35),
c(41,42,43,44,45),
c(51,52,53,54,55))
iris
mod <- lm(Sepal.Length~Sepal.Width,data=iris)
mod
summary(mod)$r.squared
summary(mod)
summary(mod) |> str()
summary(mod)$residuals
sum(summary(mod)$residuals^2)
mod$fitted.values
sum(summary(mod)$residuals^2) / (iris$Sepal.Length-mean(iris$Sepal.Length)^2
sum(summary(mod)$residuals^2) / sum((iris$Sepal.Length-mean(iris$Sepal.Length)^2))
1-sum(summary(mod)$residuals^2) / sum((iris$Sepal.Length-mean(iris$Sepal.Length)^2))
1-sum(summary(mod)$residuals^2) / sum((iris$Sepal.Length-mean(iris$Sepal.Length))^2)
summary(mod)$r.squared
rast(xmin=50,xmax=100,ymin=100,ymax=150,ncol = 5, nrow= 5)
library(terra)
r <- rast(xmin=50,xmax=100,ymin=100,ymax=150,ncol = 5, nrow= 5)
r
values(r) <- rep(5,25)
plot(r)
text(r)
values(r) <- seq(1,25*5,5)
plot(r)
text(r)
airquality
install.packages('datos')
library(datos)
?meuse
library(sp)
?meuse
datos::aerolineas
datos::atmosfera
datos::aviones
library(tidyverse)
datos::aviones |> sample_frac(.2)
data1 |> group_by(fabricante) |> n()
data1 |> group_by(fabricante) |> summarize(n())
data1 <- datos::aviones |> sample_frac(.2)
data1 |> group_by(fabricante) |> summarize(n())
data1 |> group_by(fabricante,anio) |> summarize(n())
data1 |> group_by(fabricante,anio) |> summarize(n= n()) |> rranges(desc(n))
data1 |> group_by(fabricante,anio) |> summarize(n= n()) |> arrange(desc(n))
datos::aeropuertos
data2 <- datos::aeropuertos |> sample_frac(.2)
data2
write_csv2(data2,'Evaluaciones/Eva1_2024/data/aeropuertos.csv')
data2 |> group_by(codigo_aeropuerto) |> summarize(n = n())
datos::diamantes
datos::vuelos
datos::tabla4b
datos::bateadores
datos::atmosfera
datos::dirigentes
datos::frutas
datos::nombres
datos::pinguinos
data2 <- datos::pinguinos |> sample_frac(.2)
data2
datos::pinguinos
data2 <- datos::pinguinos
data2 <- datos::pinguinos
write_csv2(data2,'Evaluaciones/Eva1_2024/data/pinguinos.csv')
data2 |> filter(isla == "Torgersen" & anio == 2007)
data1 <- datos::aviones |> sample_frac(.2)
data1 |> group_by(fabricante,anio) |> summarize(n= n()) |> arrange(desc(n))
write_csv2(data1,'Evaluaciones/Eva1_2024/data/aviones.csv')
datos::vehiculos
datos::autos
datos::mtautos
data3 |> filter(cilindros == 6 &  caballos >100 )
data3 <- datos::mtautos
data3 |> filter(cilindros == 6 &  caballos >100 )
datos::salarios
datos::frutas
datos::oms
datos::paises
data4 <- datos::paises
write_csv2(data4,'Evaluaciones/Eva1_2024/data/paises.csv')
data_4 |> nest_by(continente)
data4 |> nest_by(continente)
data4 |> nest_by(anio)
library(sf)
sscuencas <- read_sf('~/Descargas/SubsubcuencasBNA')
sscuencas
sscuenca |> distinct(COD_CUEN)
sscuencas |>
distinct(COD_CUEN)
cods <- sscuencas |>
distinct(COD_CUEN)
cods
cods <- sscuencas |>
distinct(COD_CUEN) |>
smaple(5)
cods <- sscuencas |>
distinct(COD_CUEN) |>
sample(5)
cods
?sample
cods <- sscuencas |>
distinct(COD_CUEN) |>
sample(n = 5)
cods
sample(cods[,1],5)
sample(cods[,1],5)
cods[,1]
cods$COD_CUEN
sample(cods$COD_CUEN,5)
cods <- sscuencas |>
distinct(COD_CUEN) |>
sample(n = 5)
sscuencas |>
distinct(COD_CUEN)
cods <- sscuencas |>
distinct(COD_CUEN) |>
pull(COD_CUEN) |>
sample(n = 5)
sscuencas |>
distinct(COD_CUEN) |>
pull(COD_CUEN)
sscuencas |>
distinct(COD_CUEN) |>
pull(COD_CUEN) |>
sample(n = 5)
sscuencas |>
distinct(COD_CUEN) |>
pull(COD_CUEN) |>
sample(5)
cods <- sscuencas |>
distinct(COD_CUEN) |>
pull(COD_CUEN) |>
sample(5)
cuenca <- cods[1]
ss <- sscuencas |>
ss
sscuencas |>
filter(COD_CUEN == cuenca)
ss <- sscuencas |>
ss
ss
ss
ss <- sscuencas |>
ss <- sscuencas |>
filter(COD_CUEN == cuenca)
ss
lapply(cods,\(cuenca){(
lapply(cods,\(cuenca){(
lapply(cods,\(cuenca){
sscuencas |>
filter(COD_CUEN == cuenca) |>
write_sf(paste0("Evaluaciones/Eva1_2024/data/",cuenca,'gpkg'))
})
lapply(cods,\(cuenca){
sscuencas |>
filter(COD_CUEN == cuenca) |>
write_sf(paste0("Evaluaciones/Eva1_2024/data/cuenca_codigo_",cuenca,'.gpkg'))
})
cuenca
cods <- sscuencas |>
distinct(COD_CUEN) |>
pull(COD_CUEN) |>
sample(5)
lapply(cods,\(cuenca){
sscuencas |>
filter(COD_CUEN == cuenca) |>
write_sf(paste0("Evaluaciones/Eva1_2024/data/cuenca_codigo_",cuenca,'.gpkg'))
})
rm(cuenca)
lapply(cods,\(cuenca){
sscuencas |>
filter(COD_CUEN == cuenca) |>
write_sf(paste0("Evaluaciones/Eva1_2024/data/cuenca_codigo_",cuenca,'.gpkg'))
})
cods
## raster
library(geodata)
?worldclim_country
viento <- geodata::worldclim_country('chile',var='wind',path = tempdir())
cods
viento
vient_ene <- viento[[1]]
viento_ene <- viento[[1]]
plot(viento_ene)
cuenca
sscuencas
lapply(cods,\(cuenca){
lapply(cods,\(cuenca){
mask <- sscuencas |>
filter(COD_CUEN == cuenca) |>
st_transform(crs(viento_ene))
crop(viento_ene,mask) |> mask(mask) |> writeRaster((paste0("Evaluaciones/Eva1_2024/data/viento_cuenca_codigo_",cuenca,'.tif')))
})
bbox
?bbox
terra::ext(r)
lat <- c(-35-25*60-26/3600,-37-50/60-20/3600)
lon <- c(-7224/60-30/3600,-74-50/60-5/3600)
lat
lon
lat <- c(-35-25/60-26/3600,-37-50/60-20/3600)
lon <- c(-72-24/60-30/3600,-74-50/60-5/3600)
lat
lon
rast(xmin=lon[2],xmax=lon[1],ymin=lon[2],ymax=lon[1])
rast(xmin=lon[2],xmax=lon[1],ymin=lon[2],ymax=lon[1],crs ="EPSG:4326")
r <- rast(xmin=lon[2],xmax=lon[1],ymin=lon[2],ymax=lon[1],crs ="EPSG:4326",ncol=20,nrow = 50)
r |> as.polygons() |> plot()
data3 <- datos::mtautos
data3 |> filter(cilindros == 6 &  caballos >100 )
data3
library(datos)
library(tidyverse)
data3 <- datos::mtautos
data3 |> filter(cilindros == 6 &  caballos >100 )
write_csv2(data3,'Evaluaciones/Eva1_2024/data/mtautos.csv')
#probar archivos
#
read_csv2('Evaluaciones/Eva1_2024/data/aviones.csv')
read_csv2('Evaluaciones/Eva1_2024/data/pinguinos.csv')
read_csv2('Evaluaciones/Eva1_2024/data/mtautos.csv')
read_csv2('Evaluaciones/Eva1_2024/data/paises.csv')
library(sf)
st_shift_longitude()
m <- matrix(c(-a/2,a,a/2,a,a,0,a/2,-a,-a/2,-a,-a,0))
m
a=10
m <- matrix(c(-a/2,a,a/2,a,a,0,a/2,-a,-a/2,-a,-a,0),ncol=2)
m
m <- matrix(c(-a/2,a,a/2,a,a,0,a/2,-a,-a/2,-a,-a,0),ncol=2,byrow = TRUE)
m <- matrix(c(-a/2,a,a/2,a,a,0,a/2,-a,-a/2,-a,-a,0),ncol=2,byrow = TRUE)
m
library(sf)
hex <- st_polygon(list(m))
m <- matrix(c(-a/2,a,a/2,a,a,0,a/2,-a,-a/2,-a,-a,0,-a/2,a),ncol=2,byrow = TRUE)
m <- matrix(c(-a/2,a,a/2,a,a,0,a/2,-a,-a/2,-a,-a,0,-a/2,a),ncol=2,byrow = TRUE)
hex <- st_polygon(list(m))
plot(hex)
hex2 <- hex + c(5,0)
plot(hex2,col='red',add = TRUE)
plot(hex)
lim <- read_sf('../data/data_taller7.gpkg',layer = 'comunas_RM')
subcuenca <- read_sf('../data/data_taller7.gpkg',layer = 'sucuenca_mapocho_bajo')
subcuenca <- read_sf('../data/data_taller7.gpkg',layer = 'subuenca_mapocho_bajo')
subcuenca <- read_sf('../data/data_taller7.gpkg',layer = 'subcuenca_mapocho_bajo')
limdes <- lim +c(5000,5000)
lim
lim +c(5000,5000)
lim + c(5000,5000)
limdes <- st_geometry(lim) +c(5000,5000)
sf.plot
?sf.plot
?sf::plot
lim
st_geometry(lim)
mpol <- st_geometry(lim)
st_cast(mpol,'MULTILINESTRING')
st_cast(mpol,'MULTILINESTRING') |> plot()
st_cast(mpol,'MULTILINESTRING')[1,] |> plot()
st_cast(mpol,'MULTILINESTRING')[1,]
st_cast(mpol,'MULTILINESTRING')[1,] |> st_coordinates()
fseq210022
rotation = function(a){
r = a * pi / 180 #grados a radianes
matrix(c(cos(r), sin(r), -sin(r), cos(r)), nrow = 2, ncol = 2)
}
plot(nz |> st_geometry())
library(sfheaders)
library(sf)
?read_sf
library(spData)
nz
plot(st_geometry(nz))
nz_sfc <- st_geometry(nz)
nz_sfc
nz1_sfc <- nz_sfc[1,]
plot(nz1:sfc)
plot(nz1_sfc)
nz1_sfc
nz1_sfc-st_centroid(nz1_sfc)
t <- nz1_sfc-st_centroid(nz1_sfc)
t
t*rotation(30)
t |> st_geometry()
t |> st_coordinates()
a <-t |> st_coordinates()
a*rotation(30)
rotation(30)
a[1,]
a[1,1:]
a[1,1:2]
a[1,1:2]*rotation(30)
a[1,1:2]%*%rotation(30)
fseq210022
